name: Create tagged release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    uses: ./.github/workflows/ci-autobuild.yml
    with:
      version_string: "${major}.${minor}.${patch}"

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: echo ${{ needs.build.outputs.version }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ needs.build.outputs.version }}
          body: |
            Changelog is not yet available.
          draft: false
          prerelease: false
      - uses: actions/download-artifact@v4
        with:
          name: release-ubuntu
          path: ./
      - uses: actions/download-artifact@v4
        with:
          name: release-macos
          path: ./
      - uses: actions/download-artifact@v4
        with:
          name: release-windows
          path: ./
      - name: Upload Release Asset
        id: upload-release-asset-ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./RegeltestCreator
          asset_name: RegeltestCreator_linux_${{ needs.build.outputs.version }}
          asset_content_type: application/octet-stream
      - name: Upload Release Asset
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./RegeltestCreator.app.zip
          asset_name: RegeltestCreator_macos_${{ needs.build.outputs.version }}.app.zip
          asset_content_type: application/zip
      - name: Upload Release Asset
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./RegeltestCreator.exe
          asset_name: RegeltestCreator_windows_${{ needs.build.outputs.version }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable